<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classuproot_1_1_s_t_l_seq_reader" kind="class" language="C++" prot="public">
    <compoundname>uproot::STLSeqReader</compoundname>
    <basecompoundref refid="classuproot_1_1_i_element_reader" prot="public" virt="non-virtual">uproot::IElementReader</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuproot_1_1_s_t_l_seq_reader_1a8a504e4891324e0770d0819a7b5d1b08" prot="private" static="no" mutable="no">
        <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">const</ref> <ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">bool</ref></type>
        <definition>const bool uproot::STLSeqReader::m_with_header</definition>
        <argsstring></argsstring>
        <name>m_with_header</name>
        <qualifiedname>uproot::STLSeqReader::m_with_header</qualifiedname>
        <briefdescription>
<para>Whether the sequence has a <computeroutput>fNBytes+fVersion</computeroutput> header. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="279" column="20" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuproot_1_1_s_t_l_seq_reader_1aac6e93897168dff885cd4ebdc21c5095" prot="private" static="no" mutable="no">
        <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">const</ref> <ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">int</ref></type>
        <definition>const int uproot::STLSeqReader::m_objwise_or_memberwise</definition>
        <argsstring></argsstring>
        <name>m_objwise_or_memberwise</name>
        <qualifiedname>uproot::STLSeqReader::m_objwise_or_memberwise</qualifiedname>
        <initializer>{ -1 }</initializer>
        <briefdescription>
<para>-1: auto, 0: obj-wise, 1: member-wise </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="280" column="19" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="280" bodyend="280"/>
      </memberdef>
      <memberdef kind="variable" id="classuproot_1_1_s_t_l_seq_reader_1a746efee2e7be099bf0f2f5edf41aea11" prot="private" static="no" mutable="no">
        <type>SharedReader</type>
        <definition>SharedReader uproot::STLSeqReader::m_element_reader</definition>
        <argsstring></argsstring>
        <name>m_element_reader</name>
        <qualifiedname>uproot::STLSeqReader::m_element_reader</qualifiedname>
        <briefdescription>
<para>Reader for the elements of the sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="281" column="22" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuproot_1_1_s_t_l_seq_reader_1abad7c3ce55a325c61005161c5b86578d" prot="private" static="no" mutable="no">
        <type>SharedVector&lt; <ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">int64_t</ref> &gt;</type>
        <definition>SharedVector&lt;int64_t&gt; uproot::STLSeqReader::m_offsets</definition>
        <argsstring></argsstring>
        <name>m_offsets</name>
        <qualifiedname>uproot::STLSeqReader::m_offsets</qualifiedname>
        <briefdescription>
<para>Store the offsets for each sequence. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="282" column="22" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="282" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classuproot_1_1_s_t_l_seq_reader_1ab9055c568aa137b763c9f52190ab9a80" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uproot::STLSeqReader::STLSeqReader</definition>
        <argsstring>(string name, bool with_header, int objwise_or_memberwise, SharedReader element_reader)</argsstring>
        <name>STLSeqReader</name>
        <qualifiedname>uproot::STLSeqReader::STLSeqReader</qualifiedname>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">bool</ref></type>
          <declname>with_header</declname>
        </param>
        <param>
          <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">int</ref></type>
          <declname>objwise_or_memberwise</declname>
        </param>
        <param>
          <type>SharedReader</type>
          <declname>element_reader</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classuproot_1_1_s_t_l_seq_reader" kindref="compound">STLSeqReader</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the reader. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>with_header</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the sequence has a <computeroutput>fNBytes+fVersion</computeroutput> header. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>objwise_or_memberwise</parametername>
</parameternamelist>
<parameterdescription>
<para>Object-wise or member-wise reading mode. -1: auto, 0: obj-wise, 1: member-wise. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_reader</parametername>
</parameternamelist>
<parameterdescription>
<para>Reader for the elements of the sequence. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="294" column="9" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="294" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_s_t_l_seq_reader_1ac386c9ece7c9299e8a5673e2b8e310a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">void</ref></type>
        <definition>void uproot::STLSeqReader::check_objwise_memberwise</definition>
        <argsstring>(const bool is_memberwise)</argsstring>
        <name>check_objwise_memberwise</name>
        <qualifiedname>uproot::STLSeqReader::check_objwise_memberwise</qualifiedname>
        <param>
          <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">const</ref> <ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">bool</ref></type>
          <declname>is_memberwise</declname>
        </param>
        <briefdescription>
<para>Check if the reading mode matches the expected mode. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>is_memberwise</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the current reading mode is member-wise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="307" column="14" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="307" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_s_t_l_seq_reader_1a0ea19f37703df0ce987add7a6fd8fbb9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">void</ref></type>
        <definition>void uproot::STLSeqReader::read_body</definition>
        <argsstring>(BinaryBuffer &amp;buffer, bool is_memberwise)</argsstring>
        <name>read_body</name>
        <qualifiedname>uproot::STLSeqReader::read_body</qualifiedname>
        <param>
          <type><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">bool</ref></type>
          <declname>is_memberwise</declname>
        </param>
        <briefdescription>
<para>Read the body of the sequence from the buffer. First reads the size (uint32_t) of the sequence, then calls m_element_reader to read the elements. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary buffer to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>is_memberwise</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the current reading mode is member-wise. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="323" column="14" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="323" bodyend="333"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void uproot::STLSeqReader::read</definition>
        <argsstring>(BinaryBuffer &amp;buffer) override</argsstring>
        <name>read</name>
        <qualifiedname>uproot::STLSeqReader::read</qualifiedname>
        <reimplements refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b">read</reimplements>
        <param>
          <type><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Read a sequence from the buffer. If m_with_header is true, reads a <computeroutput>fNBytes+fVersion</computeroutput> header. Then calls <ref refid="classuproot_1_1_s_t_l_seq_reader_1a0ea19f37703df0ce987add7a6fd8fbb9" kindref="member">read_body()</ref> to read the sequence body. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary buffer to read from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="341" column="14" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="341" bodyend="348"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_s_t_l_seq_reader_1ab1ee392bd024724f9fe45c59880b0ca3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">uint32_t</ref></type>
        <definition>uint32_t uproot::STLSeqReader::read_many</definition>
        <argsstring>(BinaryBuffer &amp;buffer, const int64_t count) override</argsstring>
        <name>read_many</name>
        <qualifiedname>uproot::STLSeqReader::read_many</qualifiedname>
        <reimplements refid="classuproot_1_1_i_element_reader_1ab26faa8e12220b0284d8d04dbe9f467a">read_many</reimplements>
        <param>
          <type><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">const</ref> <ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">int64_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Read multiple sequences from the buffer. If m_with_header is true, reads a <computeroutput>fNBytes+fVersion</computeroutput> header once before reading multiple sequences. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary buffer to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of sequences to read. If negative, reads according to the <computeroutput>fNBytes</computeroutput> header. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of sequences read. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="359" column="18" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="359" bodyend="397"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_s_t_l_seq_reader_1a862c178e643dd799d5aa5e150433aab9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">uint32_t</ref></type>
        <definition>uint32_t uproot::STLSeqReader::read_until</definition>
        <argsstring>(BinaryBuffer &amp;buffer, const uint8_t *end_pos) override</argsstring>
        <name>read_until</name>
        <qualifiedname>uproot::STLSeqReader::read_until</qualifiedname>
        <reimplements refid="classuproot_1_1_i_element_reader_1a487799ff1530dd3d5e59e74ddd92df50">read_until</reimplements>
        <param>
          <type><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">const</ref> <ref refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" kindref="member">uint8_t</ref> *</type>
          <declname>end_pos</declname>
        </param>
        <briefdescription>
<para>Read sequences from the buffer until reaching the end position. If m_with_header is true, reads a <computeroutput>fNBytes+fVersion</computeroutput> header once before reading sequences. If data is stored member-wise, skips 2 bytes after the header. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary buffer to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The end position to stop reading. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of sequences read. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="408" column="18" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="408" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_s_t_l_seq_reader_1aa62fd58b0996d5f7ec36754f762dea4c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>py::object</type>
        <definition>py::object uproot::STLSeqReader::data</definition>
        <argsstring>() const override</argsstring>
        <name>data</name>
        <qualifiedname>uproot::STLSeqReader::data</qualifiedname>
        <reimplements refid="classuproot_1_1_i_element_reader_1a9427a78526ae5ebe09237422c5fa0067">data</reimplements>
        <briefdescription>
<para>Get the data read by the reader. This should be called after the whole reading process. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A tuple contains: (offsets, elements_data). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="435" column="20" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="435" bodyend="439"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Reader for STL sequence types (e.g., std::vector, std::list). </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>uproot::IElementReader</label>
        <link refid="classuproot_1_1_i_element_reader"/>
      </node>
      <node id="1">
        <label>uproot::STLSeqReader</label>
        <link refid="classuproot_1_1_s_t_l_seq_reader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>uproot::IElementReader</label>
        <link refid="classuproot_1_1_i_element_reader"/>
      </node>
      <node id="1">
        <label>uproot::STLSeqReader</label>
        <link refid="classuproot_1_1_s_t_l_seq_reader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="277" column="5" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="277" bodyend="440"/>
    <listofallmembers>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1ac386c9ece7c9299e8a5673e2b8e310a3" prot="public" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>check_objwise_memberwise</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1aa62fd58b0996d5f7ec36754f762dea4c" prot="public" virt="virtual"><scope>uproot::STLSeqReader</scope><name>data</name></member>
      <member refid="classuproot_1_1_i_element_reader_1a9b25d0fa08a042fbb3d7e0a2b6a88e2c" prot="public" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>IElementReader</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1a746efee2e7be099bf0f2f5edf41aea11" prot="private" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>m_element_reader</name></member>
      <member refid="classuproot_1_1_i_element_reader_1aef43764302e9e3816906e4e06065ad23" prot="protected" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>m_name</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1aac6e93897168dff885cd4ebdc21c5095" prot="private" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>m_objwise_or_memberwise</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1abad7c3ce55a325c61005161c5b86578d" prot="private" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>m_offsets</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1a8a504e4891324e0770d0819a7b5d1b08" prot="private" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>m_with_header</name></member>
      <member refid="classuproot_1_1_i_element_reader_1a3233db4feddc686ba0cc649e49f9899c" prot="public" virt="virtual"><scope>uproot::STLSeqReader</scope><name>name</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1a73cc29d3a12261fad519bf8261d7befe" prot="public" virt="virtual"><scope>uproot::STLSeqReader</scope><name>read</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1a0ea19f37703df0ce987add7a6fd8fbb9" prot="public" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>read_body</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1ab1ee392bd024724f9fe45c59880b0ca3" prot="public" virt="virtual"><scope>uproot::STLSeqReader</scope><name>read_many</name></member>
      <member refid="classuproot_1_1_i_element_reader_1ac9b523e94e8a88e05f45fcb61e883386" prot="public" virt="virtual"><scope>uproot::STLSeqReader</scope><name>read_many_memberwise</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1a862c178e643dd799d5aa5e150433aab9" prot="public" virt="virtual"><scope>uproot::STLSeqReader</scope><name>read_until</name></member>
      <member refid="classuproot_1_1_s_t_l_seq_reader_1ab9055c568aa137b763c9f52190ab9a80" prot="public" virt="non-virtual"><scope>uproot::STLSeqReader</scope><name>STLSeqReader</name></member>
      <member refid="classuproot_1_1_i_element_reader_1a1d89f076421cb0612201abac621d4fa4" prot="public" virt="virtual"><scope>uproot::STLSeqReader</scope><name>~IElementReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
