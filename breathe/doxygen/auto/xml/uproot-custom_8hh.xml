<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="uproot-custom_8hh" kind="file" language="C++">
    <compoundname>uproot-custom.hh</compoundname>
    <includes local="no">pybind11/cast.h</includes>
    <includes local="no">pybind11/detail/common.h</includes>
    <includes local="no">pybind11/numpy.h</includes>
    <includes local="no">pybind11/pybind11.h</includes>
    <includes local="no">pybind11/pytypes.h</includes>
    <includes local="no">pybind11/stl.h</includes>
    <includes local="no">cstdint</includes>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <includes local="no">sstream</includes>
    <includes local="no">string</includes>
    <includedby refid="uproot-custom_8cc" local="yes">/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc</includedby>
    <incdepgraph>
      <node id="1">
        <label>/home/runner/work/uproot-custom/uproot-custom/cpp/include/uproot-custom/uproot-custom.hh</label>
        <link refid="uproot-custom_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>cstdint</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="10">
        <label>memory</label>
      </node>
      <node id="2">
        <label>pybind11/cast.h</label>
      </node>
      <node id="3">
        <label>pybind11/detail/common.h</label>
      </node>
      <node id="4">
        <label>pybind11/numpy.h</label>
      </node>
      <node id="5">
        <label>pybind11/pybind11.h</label>
      </node>
      <node id="6">
        <label>pybind11/pytypes.h</label>
      </node>
      <node id="7">
        <label>pybind11/stl.h</label>
      </node>
      <node id="11">
        <label>sstream</label>
      </node>
      <node id="12">
        <label>string</label>
      </node>
    </incdepgraph>
    <innerclass refid="classuproot_1_1_binary_buffer" prot="public">uproot::BinaryBuffer</innerclass>
    <innerclass refid="classuproot_1_1_i_element_reader" prot="public">uproot::IElementReader</innerclass>
    <innernamespace refid="namespaceuproot">uproot</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="uproot-custom_8hh_1a392ac9b641493f2271147294f98592ba" prot="public" static="no">
        <name>IMPORT_UPROOT_CUSTOM_CPP</name>
        <initializer>pybind11::module_::import( &quot;uproot_custom.cpp&quot; );</initializer>
        <briefdescription>
<para>Macro to import the uproot_custom.cpp module. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This macro should be used in the <computeroutput>PYBIND11_MODULE</computeroutput> definition of your module. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/include/uproot-custom/uproot-custom.hh" line="33" column="9" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/include/uproot-custom/uproot-custom.hh" bodystart="33" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/cast.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/detail/common.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/numpy.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pybind11.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/pytypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pybind11/stl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(<sp/>_MSC_VER<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>bswap16(<sp/>x<sp/>)<sp/>_byteswap_ushort(<sp/>x<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>bswap32(<sp/>x<sp/>)<sp/>_byteswap_ulong(<sp/>x<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>bswap64(<sp/>x<sp/>)<sp/>_byteswap_uint64(<sp/>x<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(<sp/>__GNUC__<sp/>)<sp/>||<sp/>defined(<sp/>__clang__<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>bswap16(<sp/>x<sp/>)<sp/>__builtin_bswap16(<sp/>x<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>bswap32(<sp/>x<sp/>)<sp/>__builtin_bswap32(<sp/>x<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>bswap64(<sp/>x<sp/>)<sp/>__builtin_bswap64(<sp/>x<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>error<sp/>&quot;Unsupported<sp/>compiler!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IMPORT_UPROOT_CUSTOM_CPP<sp/>pybind11::module_::import(<sp/>&quot;uproot_custom.cpp&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">uproot<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">py<sp/>=<sp/>pybind11;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">std::shared_ptr;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kNewClassTag<sp/><sp/><sp/><sp/>=<sp/>0xFFFFFFFF;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kClassMask<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0x80000000;<sp/></highlight><highlight class="comment">//<sp/>OR<sp/>the<sp/>class<sp/>index<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kByteCountMask<sp/><sp/>=<sp/>0x40000000;<sp/></highlight><highlight class="comment">//<sp/>OR<sp/>the<sp/>byte<sp/>count<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint32_t<sp/>kMaxMapCount<sp/><sp/><sp/><sp/>=<sp/>0x3FFFFFFE;<sp/></highlight><highlight class="comment">//<sp/>last<sp/>valid<sp/>fMapCount<sp/>and<sp/>byte<sp/>count</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>kByteCountVMask<sp/>=<sp/>0x4000;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>OR<sp/>the<sp/>version<sp/>byte<sp/>count<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>kMaxVersion<sp/><sp/><sp/><sp/><sp/>=<sp/>0x3FFF;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>highest<sp/>possible<sp/>version<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t<sp/>kMapOffset<sp/>=<sp/>2;<sp/></highlight><highlight class="comment">//<sp/>first<sp/>2<sp/>map<sp/>entries<sp/>are<sp/>taken<sp/>by<sp/>null<sp/>obj<sp/>and<sp/>self<sp/>obj</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint16_t<sp/>kStreamedMemberWise<sp/>=<sp/>1<sp/>&lt;&lt;<sp/>14;<sp/></highlight><highlight class="comment">//<sp/>streamed<sp/>member-wise<sp/>mask</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classuproot_1_1_binary_buffer" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="51" refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469f" kindref="member">EStatusBits</ref><sp/>{</highlight></codeline>
<codeline lineno="52" refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa1809e08f807cf72ca9ab8c3e95c958f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa1809e08f807cf72ca9ab8c3e95c958f2" kindref="member">kCanDelete</ref><sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/>0,<sp/></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>is<sp/>taken<sp/>by<sp/>TDataMember</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa6312b886722b8ca4a2bca12ea71f217b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa6312b886722b8ca4a2bca12ea71f217b" kindref="member">kMustCleanup</ref><sp/><sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/>3,<sp/></highlight></codeline>
<codeline lineno="55" refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa640f316cca36ff8f6870d8991aecfe00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa640f316cca36ff8f6870d8991aecfe00" kindref="member">kIsReferenced</ref><sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/>4,<sp/></highlight></codeline>
<codeline lineno="56" refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa3ee2a311401a546348bebc39f8fa7504" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa3ee2a311401a546348bebc39f8fa7504" kindref="member">kHasUUID</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/>5,<sp/></highlight></codeline>
<codeline lineno="57" refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fadb083aec5027b16e07254a62603f67d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fadb083aec5027b16e07254a62603f67d6" kindref="member">kCannotPick</ref><sp/><sp/><sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/>6,<sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>7<sp/>is<sp/>taken<sp/>by<sp/>TAxis<sp/>and<sp/>TClass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fab9fb81d4298216d8f9ed52494dffc8d2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fab9fb81d4298216d8f9ed52494dffc8d2" kindref="member">kNoContextMenu</ref><sp/>=<sp/>1ULL<sp/>&lt;&lt;<sp/>8,<sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>9,<sp/>10<sp/>are<sp/>taken<sp/>by<sp/>TH1,<sp/>TF1,<sp/>TAxis<sp/>and<sp/>a<sp/>few<sp/>others</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/>is<sp/>taken<sp/>by<sp/>TAxis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa0949c109c9a38f7eb1c57c8fb09246af" kindref="member">kInvalidObject</ref><sp/>=<sp/>1ULL</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>13<sp/></highlight></codeline>
<codeline lineno="64" refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa0949c109c9a38f7eb1c57c8fb09246af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="classuproot_1_1_binary_buffer_1ae90dac56ce8da351226b0249703596c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1ae90dac56ce8da351226b0249703596c1" kindref="member">BinaryBuffer</ref>(<sp/>py::array_t&lt;uint8_t&gt;<sp/>data,<sp/>py::array_t&lt;uint32_t&gt;<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">offsets</ref><sp/>)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>m_data(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">static_cast</ref>&lt;<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint8_t</ref>*&gt;(<sp/>data.<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">request</ref>().<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">ptr</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_offsets(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">static_cast</ref>&lt;<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint32_t</ref>*&gt;(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">offsets</ref>.<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">request</ref>().<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">ptr</ref><sp/>)<sp/>)</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_entries(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">offsets</ref>.<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">request</ref>().<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">size</ref><sp/>-<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_cursor(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">static_cast</ref>&lt;<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint8_t</ref>*&gt;(<sp/>data.<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">request</ref>().<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">ptr</ref><sp/>)<sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="84" refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">read</ref>()<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">constexpr</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">size</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref><sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">size</ref><sp/>)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_cursor++<sp/>);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint16_t</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.value<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_cursor<sp/>);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursor<sp/>+=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.bits<sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">bswap16</ref>(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.bits<sp/>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.value;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:<sp/>{</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint32_t</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.value<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_cursor<sp/>);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursor<sp/>+=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.bits<sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">bswap32</ref>(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.bits<sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.value;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:<sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint64_t</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.value<sp/>=<sp/>*</highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">T</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(<sp/>m_cursor<sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursor<sp/>+=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.bits<sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">bswap64</ref>(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.bits<sp/>);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">val</ref>.value;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Unsupported<sp/>type<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">size</ref><sp/>)<sp/>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="classuproot_1_1_binary_buffer_1a3464e07591ec32b89d49ad1051314bb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">int16_t</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1a3464e07591ec32b89d49ad1051314bb3" kindref="member">read_fVersion</ref>()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">read&lt;int16_t&gt;</ref>();<sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="138" refid="classuproot_1_1_binary_buffer_1aceb9cb47214de1ba6828949207cfd119" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint32_t</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1aceb9cb47214de1ba6828949207cfd119" kindref="member">read_fNBytes</ref>()<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">byte_count</ref><sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">read&lt;uint32_t&gt;</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">byte_count</ref><sp/>&amp;<sp/>kByteCountMask<sp/>)<sp/>)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>byte<sp/>count&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">byte_count</ref><sp/>&amp;<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">~kByteCountMask</ref>;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classuproot_1_1_binary_buffer_1ac13428943c87fa13fe1b272801319b18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classuproot_1_1_binary_buffer_1ac13428943c87fa13fe1b272801319b18" kindref="member">read_null_terminated_string</ref>()<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">start</ref><sp/>=<sp/>m_cursor;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>*m_cursor<sp/>!=<sp/>0<sp/>)<sp/>{<sp/>m_cursor++;<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursor++;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">start</ref>,<sp/>m_cursor<sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="classuproot_1_1_binary_buffer_1a208b9f5eef60e00581c0bdc5f2e4d622" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classuproot_1_1_binary_buffer_1a208b9f5eef60e00581c0bdc5f2e4d622" kindref="member">read_obj_header</ref>()<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1aceb9cb47214de1ba6828949207cfd119" kindref="member">read_fNBytes</ref>();</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">fTag</ref><sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">read&lt;uint32_t&gt;</ref>();</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">fTag</ref><sp/>==<sp/>kNewClassTag<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1ac13428943c87fa13fe1b272801319b18" kindref="member">read_null_terminated_string</ref>();</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string();</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="179" refid="classuproot_1_1_binary_buffer_1acd0329a0fb952f2125741d8efb8d43b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classuproot_1_1_binary_buffer_1acd0329a0fb952f2125741d8efb8d43b4" kindref="member">read_TString</ref>()<sp/>{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint32_t</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">length</ref><sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">read&lt;uint8_t&gt;</ref>();</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">length</ref><sp/>==<sp/>255<sp/>)<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">length</ref><sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">read&lt;uint32_t&gt;</ref>();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">start</ref><sp/>=<sp/>m_cursor;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursor<sp/>+=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">start</ref>,<sp/>m_cursor<sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="classuproot_1_1_binary_buffer_1a8249a13ad5afcd1843c5e08aad5ae004" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1a8249a13ad5afcd1843c5e08aad5ae004" kindref="member">skip</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">n</ref><sp/>)<sp/>{<sp/>m_cursor<sp/>+=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">n</ref>;<sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="classuproot_1_1_binary_buffer_1a26345895df03d02487e7babf231cb49e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1a26345895df03d02487e7babf231cb49e" kindref="member">skip_fNBytes</ref>()<sp/>{<sp/><ref refid="classuproot_1_1_binary_buffer_1aceb9cb47214de1ba6828949207cfd119" kindref="member">read_fNBytes</ref>();<sp/>}</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="203" refid="classuproot_1_1_binary_buffer_1a4ac9566eee4e17ec65b2024bbe2d1d9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1a4ac9566eee4e17ec65b2024bbe2d1d9b" kindref="member">skip_fVersion</ref>()<sp/>{<sp/><ref refid="classuproot_1_1_binary_buffer_1a8249a13ad5afcd1843c5e08aad5ae004" kindref="member">skip</ref>(<sp/>2<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="classuproot_1_1_binary_buffer_1a8d3f7684b101f18b496df314ac1e8b18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1a8d3f7684b101f18b496df314ac1e8b18" kindref="member">skip_null_terminated_string</ref>()<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/>*m_cursor<sp/>!=<sp/>0<sp/>)<sp/>{<sp/>m_cursor++;<sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_cursor++;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="218" refid="classuproot_1_1_binary_buffer_1a786f5cb2a4e22bdd8138524f022657c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1a786f5cb2a4e22bdd8138524f022657c8" kindref="member">skip_obj_header</ref>()<sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a26345895df03d02487e7babf231cb49e" kindref="member">skip_fNBytes</ref>();</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">fTag</ref><sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">read&lt;uint32_t&gt;</ref>();</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">fTag</ref><sp/>==<sp/>kNewClassTag<sp/>)<sp/><ref refid="classuproot_1_1_binary_buffer_1a8d3f7684b101f18b496df314ac1e8b18" kindref="member">skip_null_terminated_string</ref>();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="classuproot_1_1_binary_buffer_1ac3a29c312cd136e2a4fa7fc3bef0f250" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1ac3a29c312cd136e2a4fa7fc3bef0f250" kindref="member">skip_TObject</ref>()<sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>CanIgnoreTObjectStreamer()<sp/>?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a4ac9566eee4e17ec65b2024bbe2d1d9b" kindref="member">skip_fVersion</ref>();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1a8249a13ad5afcd1843c5e08aad5ae004" kindref="member">skip</ref>(<sp/>4<sp/>);<sp/></highlight><highlight class="comment">//<sp/>fUniqueID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">fBits</ref><sp/>=<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">read&lt;uint32_t&gt;</ref>();</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">fBits</ref><sp/>&amp;<sp/>(<sp/><ref refid="classuproot_1_1_binary_buffer_1a4b70d27b36d1c1d1224c3d938fe3469fa640f316cca36ff8f6870d8991aecfe00" kindref="member">kIsReferenced</ref><sp/>)<sp/>)<sp/><ref refid="classuproot_1_1_binary_buffer_1a8249a13ad5afcd1843c5e08aad5ae004" kindref="member">skip</ref>(<sp/>2<sp/>);<sp/></highlight><highlight class="comment">//<sp/>pidf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="classuproot_1_1_binary_buffer_1a79a1d1ce86da330b626dbc8e5b4d54e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint8_t</ref>*<sp/><ref refid="classuproot_1_1_binary_buffer_1a79a1d1ce86da330b626dbc8e5b4d54e6" kindref="member">get_data</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_data;<sp/>}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="245" refid="classuproot_1_1_binary_buffer_1ac5b053d2636138eb05993074fcb5f4f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint8_t</ref>*<sp/><ref refid="classuproot_1_1_binary_buffer_1ac5b053d2636138eb05993074fcb5f4f3" kindref="member">get_cursor</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_cursor;<sp/>}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="classuproot_1_1_binary_buffer_1a9d9e22c3ed79b77a324998ea39c93079" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint32_t</ref>*<sp/><ref refid="classuproot_1_1_binary_buffer_1a9d9e22c3ed79b77a324998ea39c93079" kindref="member">get_offsets</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_offsets;<sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="classuproot_1_1_binary_buffer_1acca674325dd882bce54b10f3bc144760" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint64_t</ref><sp/><ref refid="classuproot_1_1_binary_buffer_1acca674325dd882bce54b10f3bc144760" kindref="member">entries</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_entries;<sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="262" refid="classuproot_1_1_binary_buffer_1af8cbdbc65070e4b4f9ab5300ea0545cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af8cbdbc65070e4b4f9ab5300ea0545cb" kindref="member">debug_print</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">n</ref><sp/>=<sp/>100<sp/>)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">n</ref>;<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">i</ref>++<sp/>)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/>(<ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">int</ref>)*(<sp/>m_cursor<sp/>+<sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">i</ref><sp/>)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint8_t</ref>*<sp/>m_cursor;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint64_t</ref><sp/>m_entries;<sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint8_t</ref>*<sp/>m_data;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_binary_buffer_1af49068c121159f67dbbd4e76f043e477" kindref="member">uint32_t</ref>*<sp/>m_offsets;<sp/></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="classuproot_1_1_i_element_reader" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classuproot_1_1_i_element_reader" kindref="compound">IElementReader</ref><sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="285" refid="classuproot_1_1_i_element_reader_1aef43764302e9e3816906e4e06065ad23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classuproot_1_1_i_element_reader_1aef43764302e9e3816906e4e06065ad23" kindref="member">m_name</ref>;<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="293" refid="classuproot_1_1_i_element_reader_1a9b25d0fa08a042fbb3d7e0a2b6a88e2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_i_element_reader_1a9b25d0fa08a042fbb3d7e0a2b6a88e2c" kindref="member">IElementReader</ref>(<sp/>std::string<sp/><ref refid="classuproot_1_1_i_element_reader_1a3233db4feddc686ba0cc649e49f9899c" kindref="member">name</ref><sp/>)<sp/>:<sp/><ref refid="classuproot_1_1_i_element_reader_1aef43764302e9e3816906e4e06065ad23" kindref="member">m_name</ref>(<sp/><ref refid="classuproot_1_1_i_element_reader_1a3233db4feddc686ba0cc649e49f9899c" kindref="member">name</ref><sp/>)<sp/>{}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader" kindref="compound">~IElementReader</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="302" refid="classuproot_1_1_i_element_reader_1a3233db4feddc686ba0cc649e49f9899c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="classuproot_1_1_i_element_reader_1a3233db4feddc686ba0cc649e49f9899c" kindref="member">name</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aef43764302e9e3816906e4e06065ad23" kindref="member">m_name</ref>;<sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">read</ref>(<sp/><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref>&amp;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">buffer</ref><sp/>)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="317" refid="classuproot_1_1_i_element_reader_1a9427a78526ae5ebe09237422c5fa0067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>py::object<sp/><ref refid="classuproot_1_1_i_element_reader_1a9427a78526ae5ebe09237422c5fa0067" kindref="member">data</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="classuproot_1_1_i_element_reader_1ab26faa8e12220b0284d8d04dbe9f467a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">uint32_t</ref><sp/><ref refid="classuproot_1_1_i_element_reader_1ab26faa8e12220b0284d8d04dbe9f467a" kindref="member">read_many</ref>(<sp/><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref>&amp;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">int64_t</ref><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">count</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">int32_t</ref><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">count</ref>;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">i</ref>++<sp/>)<sp/>{<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">read</ref>(<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">buffer</ref><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="348" refid="classuproot_1_1_i_element_reader_1a487799ff1530dd3d5e59e74ddd92df50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">uint32_t</ref><sp/><ref refid="classuproot_1_1_i_element_reader_1a487799ff1530dd3d5e59e74ddd92df50" kindref="member">read_until</ref>(<sp/><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref>&amp;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">uint8_t</ref>*<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">end_pos</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">uint32_t</ref><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">cur_count</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">buffer</ref>.get_cursor()<sp/>&lt;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">end_pos</ref><sp/>)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">read</ref>(<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">buffer</ref><sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">cur_count</ref>++;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">cur_count</ref>;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="classuproot_1_1_i_element_reader_1ac9b523e94e8a88e05f45fcb61e883386" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">uint32_t</ref><sp/><ref refid="classuproot_1_1_i_element_reader_1ac9b523e94e8a88e05f45fcb61e883386" kindref="member">read_many_memberwise</ref>(<sp/><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref>&amp;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">buffer</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">int64_t</ref><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">count</ref><sp/>)<sp/>{</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">count</ref><sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">msg</ref>;</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">msg</ref><sp/>&lt;&lt;<sp/><ref refid="classuproot_1_1_i_element_reader_1a3233db4feddc686ba0cc649e49f9899c" kindref="member">name</ref>()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;::read_many_memberwise<sp/>with<sp/>negative<sp/>count:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">msg</ref>.str()<sp/>);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classuproot_1_1_i_element_reader_1ab26faa8e12220b0284d8d04dbe9f467a" kindref="member">read_many</ref>(<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">buffer</ref>,<sp/><ref refid="classuproot_1_1_i_element_reader_1aa8792622949d1198850dbcc2cae7f88b" kindref="member">count</ref><sp/>);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal">SharedReader<sp/>=<sp/>shared_ptr&lt;IElementReader&gt;;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReaderType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>shared_ptr&lt;ReaderType&gt;<sp/>CreateReader(<sp/>Args...<sp/>args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_shared&lt;ReaderType&gt;(<sp/>std::forward&lt;Args&gt;(<sp/>args<sp/>)...<sp/>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>ReaderType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>declare_reader(<sp/>py::module&amp;<sp/>m,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>name<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::class_&lt;ReaderType,<sp/>shared_ptr&lt;ReaderType&gt;,<sp/>IElementReader&gt;(<sp/>m,<sp/>name<sp/>).def(</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>py::init(<sp/>&amp;CreateReader&lt;ReaderType,<sp/>Args...&gt;<sp/>)<sp/>);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>py::array_t&lt;T&gt;<sp/>make_array(<sp/>shared_ptr&lt;std::vector&lt;T&gt;&gt;<sp/>seq<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>seq-&gt;size();</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>data<sp/>=<sp/>seq-&gt;data();</highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>capsule<sp/>=<sp/>py::capsule(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal">(<sp/>seq<sp/>),<sp/>[](<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>p<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">std::shared_ptr&lt;std::vector&lt;T&gt;</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">*&gt;(<sp/>p<sp/>);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>py::array_t&lt;T&gt;(<sp/>size,<sp/>data,<sp/>capsule<sp/>);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/><sp/><sp/><sp/>-----------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal">...<sp/>Args&gt;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>debug_printf(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/>Args...<sp/>args<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_print<sp/>=<sp/>getenv(<sp/></highlight><highlight class="stringliteral">&quot;UPROOT_DEBUG&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UPROOT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_print<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!do_print<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<sp/>msg,<sp/>std::forward&lt;Args&gt;(<sp/>args<sp/>)...<sp/>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>debug_printf(<sp/><ref refid="classuproot_1_1_binary_buffer" kindref="compound">uproot::BinaryBuffer</ref>&amp;<sp/>buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>100<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>do_print<sp/>=<sp/>getenv(<sp/></highlight><highlight class="stringliteral">&quot;UPROOT_DEBUG&quot;</highlight><highlight class="normal"><sp/>);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>UPROOT_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do_print<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!do_print<sp/>)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer.<ref refid="classuproot_1_1_binary_buffer_1af8cbdbc65070e4b4f9ab5300ea0545cb" kindref="member">debug_print</ref>(<sp/>n<sp/>);</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>uproot</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/include/uproot-custom/uproot-custom.hh"/>
  </compounddef>
</doxygen>
