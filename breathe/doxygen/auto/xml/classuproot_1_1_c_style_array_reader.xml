<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classuproot_1_1_c_style_array_reader" kind="class" language="C++" prot="public">
    <compoundname>uproot::CStyleArrayReader</compoundname>
    <basecompoundref refid="classuproot_1_1_i_reader" prot="public" virt="non-virtual">uproot::IReader</basecompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classuproot_1_1_c_style_array_reader_1a5e7acfe91513eac48215cf646beccdaf" prot="private" static="no" mutable="no">
        <type><ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">const</ref> <ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">int64_t</ref></type>
        <definition>const int64_t uproot::CStyleArrayReader::m_flat_size</definition>
        <argsstring></argsstring>
        <name>m_flat_size</name>
        <qualifiedname>uproot::CStyleArrayReader::m_flat_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Flatten size of the array. If negative, means variable size. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1080" column="23" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuproot_1_1_c_style_array_reader_1a00279cf319d1b35c3d40b8842aba517c" prot="private" static="no" mutable="no">
        <type>SharedVector&lt; <ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">int64_t</ref> &gt;</type>
        <definition>SharedVector&lt;int64_t&gt; uproot::CStyleArrayReader::m_offsets</definition>
        <argsstring></argsstring>
        <name>m_offsets</name>
        <qualifiedname>uproot::CStyleArrayReader::m_offsets</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Store the offsets for each array (only used when variable size). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1082" column="22" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1082" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classuproot_1_1_c_style_array_reader_1af5aefae0ff1bdb02057cd65f753e11eb" prot="private" static="no" mutable="no">
        <type>SharedReader</type>
        <definition>SharedReader uproot::CStyleArrayReader::m_element_reader</definition>
        <argsstring></argsstring>
        <name>m_element_reader</name>
        <qualifiedname>uproot::CStyleArrayReader::m_element_reader</qualifiedname>
        <briefdescription>
<para>Reader for the array elements. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1084" column="22" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1084" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classuproot_1_1_c_style_array_reader_1a653a8d1adfd26d3db509e512e45d2b2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>uproot::CStyleArrayReader::CStyleArrayReader</definition>
        <argsstring>(string name, const int64_t flat_size, SharedReader element_reader)</argsstring>
        <name>CStyleArrayReader</name>
        <qualifiedname>uproot::CStyleArrayReader::CStyleArrayReader</qualifiedname>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">const</ref> <ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">int64_t</ref></type>
          <declname>flat_size</declname>
        </param>
        <param>
          <type>SharedReader</type>
          <declname>element_reader</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="classuproot_1_1_c_style_array_reader" kindref="compound">CStyleArrayReader</ref> object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the reader. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flat_size</parametername>
</parameternamelist>
<parameterdescription>
<para>Flatten size of the array. If negative, means variable size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>element_reader</parametername>
</parameternamelist>
<parameterdescription>
<para>Reader for the array elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1094" column="9" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1094" bodyend="1098"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void uproot::CStyleArrayReader::read</definition>
        <argsstring>(BinaryBuffer &amp;buffer) override</argsstring>
        <name>read</name>
        <qualifiedname>uproot::CStyleArrayReader::read</qualifiedname>
        <reimplements refid="classuproot_1_1_i_reader_1af7b6cdf7293548710230ee82ff9706d8">read</reimplements>
        <param>
          <type><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Read the array from the buffer. If m_flat_size is positive, calls <ref refid="classuproot_1_1_i_reader_1a0f59056370968271e27813bd0722eae4" kindref="member">IReader::read_many()</ref> function of m_element_reader. Otherwise, reads until the end of the current entry in the buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary buffer to read from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1107" column="14" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1107" bodyend="1130"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_c_style_array_reader_1a7b5a74c75d74e7fda8c1a93124fc6672" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">uint32_t</ref></type>
        <definition>uint32_t uproot::CStyleArrayReader::read_many</definition>
        <argsstring>(BinaryBuffer &amp;buffer, const int64_t count) override</argsstring>
        <name>read_many</name>
        <qualifiedname>uproot::CStyleArrayReader::read_many</qualifiedname>
        <reimplements refid="classuproot_1_1_i_reader_1a0f59056370968271e27813bd0722eae4">read_many</reimplements>
        <param>
          <type><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">const</ref> <ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">int64_t</ref></type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Read multiple arrays from the buffer. Only supported when m_flat_size is positive. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary buffer to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of arrays to read. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of arrays read. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1140" column="18" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1140" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_c_style_array_reader_1a8b0b383292419898d1b040222acc356e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type><ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">uint32_t</ref></type>
        <definition>uint32_t uproot::CStyleArrayReader::read_until</definition>
        <argsstring>(BinaryBuffer &amp;buffer, const uint8_t *end_pos) override</argsstring>
        <name>read_until</name>
        <qualifiedname>uproot::CStyleArrayReader::read_until</qualifiedname>
        <reimplements refid="classuproot_1_1_i_reader_1ab72b33c05c4e76a3f658b735f0068d66">read_until</reimplements>
        <param>
          <type><ref refid="classuproot_1_1_binary_buffer" kindref="compound">BinaryBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type><ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">const</ref> <ref refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" kindref="member">uint8_t</ref> *</type>
          <declname>end_pos</declname>
        </param>
        <briefdescription>
<para>Read arrays from the buffer until reaching the end position. Not supported. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>The binary buffer to read from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>end_pos</parametername>
</parameternamelist>
<parameterdescription>
<para>The end position to stop reading. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of arrays read.</para>
</simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>std::runtime_error</parametername>
</parameternamelist>
<parameterdescription>
<para>Always thrown since this method is not supported. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1169" column="18" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1169" bodyend="1171"/>
      </memberdef>
      <memberdef kind="function" id="classuproot_1_1_c_style_array_reader_1a67f2a1a32309d9d09f47fc9acc5da3ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>py::object</type>
        <definition>py::object uproot::CStyleArrayReader::data</definition>
        <argsstring>() const override</argsstring>
        <name>data</name>
        <qualifiedname>uproot::CStyleArrayReader::data</qualifiedname>
        <reimplements refid="classuproot_1_1_i_reader_1acd7126fde99fad7d3f497aaee23ae118">data</reimplements>
        <briefdescription>
<para>Get the data read by the reader. This should be called after the whole reading process. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>If m_flat_size is positive, directly return the data from m_element_reader. Otherwise, return a tuple contains: (offsets, elements_data). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1180" column="20" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1180" bodyend="1188"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Reader for C-style arrays and std::array. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>uproot::CStyleArrayReader</label>
        <link refid="classuproot_1_1_c_style_array_reader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>uproot::IReader</label>
        <link refid="classuproot_1_1_i_reader"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>uproot::CStyleArrayReader</label>
        <link refid="classuproot_1_1_c_style_array_reader"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>uproot::IReader</label>
        <link refid="classuproot_1_1_i_reader"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" line="1078" column="5" bodyfile="/home/runner/work/uproot-custom/uproot-custom/cpp/src/uproot-custom.cc" bodystart="1078" bodyend="1189"/>
    <listofallmembers>
      <member refid="classuproot_1_1_c_style_array_reader_1a653a8d1adfd26d3db509e512e45d2b2a" prot="public" virt="non-virtual"><scope>uproot::CStyleArrayReader</scope><name>CStyleArrayReader</name></member>
      <member refid="classuproot_1_1_c_style_array_reader_1a67f2a1a32309d9d09f47fc9acc5da3ad" prot="public" virt="virtual"><scope>uproot::CStyleArrayReader</scope><name>data</name></member>
      <member refid="classuproot_1_1_i_reader_1aed13e9c0926be8e89422cf49efdcc752" prot="public" virt="non-virtual"><scope>uproot::CStyleArrayReader</scope><name>IReader</name></member>
      <member refid="classuproot_1_1_c_style_array_reader_1af5aefae0ff1bdb02057cd65f753e11eb" prot="private" virt="non-virtual"><scope>uproot::CStyleArrayReader</scope><name>m_element_reader</name></member>
      <member refid="classuproot_1_1_c_style_array_reader_1a5e7acfe91513eac48215cf646beccdaf" prot="private" virt="non-virtual"><scope>uproot::CStyleArrayReader</scope><name>m_flat_size</name></member>
      <member refid="classuproot_1_1_i_reader_1aae3ebcf2974166ec9eb868528759dbc9" prot="protected" virt="non-virtual"><scope>uproot::CStyleArrayReader</scope><name>m_name</name></member>
      <member refid="classuproot_1_1_c_style_array_reader_1a00279cf319d1b35c3d40b8842aba517c" prot="private" virt="non-virtual"><scope>uproot::CStyleArrayReader</scope><name>m_offsets</name></member>
      <member refid="classuproot_1_1_i_reader_1a94ec0db0c0012df8317add7519a0c299" prot="public" virt="virtual"><scope>uproot::CStyleArrayReader</scope><name>name</name></member>
      <member refid="classuproot_1_1_c_style_array_reader_1a4f4337c9fa35b608b436a2829ff8f4b9" prot="public" virt="virtual"><scope>uproot::CStyleArrayReader</scope><name>read</name></member>
      <member refid="classuproot_1_1_c_style_array_reader_1a7b5a74c75d74e7fda8c1a93124fc6672" prot="public" virt="virtual"><scope>uproot::CStyleArrayReader</scope><name>read_many</name></member>
      <member refid="classuproot_1_1_i_reader_1a4d01c9b32bed762117e148e997b2fb25" prot="public" virt="virtual"><scope>uproot::CStyleArrayReader</scope><name>read_many_memberwise</name></member>
      <member refid="classuproot_1_1_c_style_array_reader_1a8b0b383292419898d1b040222acc356e" prot="public" virt="virtual"><scope>uproot::CStyleArrayReader</scope><name>read_until</name></member>
      <member refid="classuproot_1_1_i_reader_1a0e010e1426c196808a4ac5f4723637cc" prot="public" virt="virtual"><scope>uproot::CStyleArrayReader</scope><name>~IReader</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
